file to work on: /views/Authentication.tsx
css file to style: /assets/styles/views/authentication.css
the image: /assets/images/...

check screenshots and video on whatapp

#FF0000


            {/* <div className="steps-holder">
            {steps.map((step, index) => {
              return (
                <div
                  className="steps"
                  style={{
                    transition: "border-top 0.2s",
                    borderLeft:
                      windowWidth < 768
                        ? `4px solid ${
                            page === index
                              ? "#2834c2"
                              : stepDone && page === index + 1
                              ? "#2834c2"
                              : stepDone && page === index + 2
                              ? "#2834c2"
                              : stepDone && page === index + 3
                              ? "#2834c2"
                              : stepDone && page === index + 4
                              ? "#2834c2"
                              : "#D5D5D5"
                          }`
                        : "transparent",
                    borderTop:
                      windowWidth >= 768
                        ? `4px solid ${
                            page === index
                              ? "#2834c2"
                              : stepDone && page === index + 1
                              ? "#2834c2"
                              : stepDone && page === index + 2
                              ? "#2834c2"
                              : stepDone && page === index + 3
                              ? "#2834c2"
                              : stepDone && page === index + 4
                              ? "#2834c2"
                              : "#D5D5D5"
                          }`
                        : "transparent",
                  }}
                  key={index}>
                  {step.comp}
                </div>
              );
            })}
          </div> */}


            const steps = [
    {
      comp: (
        <Steps
          counter={t("survey.stepOne")}
          text={t("survey.stepOneText")}
          style={{
            color:
              page === 0
                ? "#2834c2"
                : (stepDone && page === 1) ||
                  (stepDone && page === 2) ||
                  (stepDone && page === 3) ||
                  (stepDone && page === 4)
                ? "#2834c2"
                : "darkgray",
          }}
        />
      ),
    },
    {
      comp: (
        <Steps
          counter={t("survey.stepTwo")}
          text={t("survey.stepTwoText")}
          style={{
            color:
              page === 1
                ? "#2834c2"
                : (stepDone && page === 2) ||
                  (stepDone && page === 3) ||
                  (stepDone && page === 4)
                ? "#2834c2"
                : "darkgray",
          }}
        />
      ),
    },
    {
      comp: (
        <Steps
          counter={t("survey.stepThree")}
          text={t("survey.stepThreeText")}
          style={{
            color:
              page === 2
                ? "#2834c2"
                : (stepDone && page === 3) || (stepDone && page === 4)
                ? "#2834c2"
                : "darkgray",
          }}
        />
      ),
    },
    {
      comp: (
        <Steps
          counter={t("survey.stepFour")}
          text={t("survey.stepFourText")}
          style={{
            color:
              page === 3
                ? "#2834c2"
                : stepDone && page === 4
                ? "#2834c2"
                : "darkgray",
          }}
        />
      ),
    },
    {
      comp: (
        <Steps
          counter={t("survey.stepFive")}
          text={t("survey.stepFiveText")}
          style={{
            color:
              page === 4
                ? "#2834c2"
                : stepDone && page === 4
                ? "#2834c2"
                : "darkgray",
          }}
        />
      ),
    },
  ];

    const surveysOptions = [
    {
      option: t("newSurvey.rating"),
    },
  ];
  const resultsOptions = [
    {
      option: t("newSurvey.afterSurvey"),
    },
  ];


  possible error type
  500 server error (not available)
  404 nicht gefunden (wrong req)
  422 Unprocessable Entity (server found but couldnt handle data)

  to start the survey a state global isStarted needed
  onClick start set isStarted to true
  if true remove NoStarted component and show survey pages to the students
  slice the survey pages to one each slice
  onClick next show next slice
  for that a global state nextSurveyPage is needed
